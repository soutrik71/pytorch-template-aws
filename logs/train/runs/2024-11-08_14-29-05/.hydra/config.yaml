task_name: train
tags:
- dev
train: true
test: false
ckpt_path: ${paths.ckpt_dir}/best-checkpoint.ckpt
seed: 42
name: catdog_experiment
data:
  _target_: src.datamodules.catdog_datamodule.CatDogImageDataModule
  data_dir: ${paths.data_dir}
  url: ${paths.data_url}
  num_workers: 8
  batch_size: 64
  splits:
  - 0.8
  - 0.2
  pin_memory: true
  image_size: 160
model:
  _target_: src.models.catdog_classifier.ViTTinyClassifier
  img_size: 160
  patch_size: 16
  num_classes: 2
  embed_dim: 64
  depth: 6
  num_heads: 2
  mlp_ratio: 3
  pre_norm: false
  lr: 0.001
  weight_decay: 1.0e-05
  factor: 0.1
  patience: 10
  min_lr: 1.0e-06
callbacks:
  model_checkpoint:
    _target_: lightning.pytorch.callbacks.ModelCheckpoint
    dirpath: ${paths.ckpt_dir}
    filename: best-checkpoint
    monitor: val_acc
    verbose: false
    save_last: true
    save_top_k: 1
    mode: max
    auto_insert_metric_name: false
    save_weights_only: false
    every_n_train_steps: null
    train_time_interval: null
    every_n_epochs: null
    save_on_train_epoch_end: null
  early_stopping:
    _target_: lightning.pytorch.callbacks.EarlyStopping
    monitor: val_acc
    min_delta: 0.0
    patience: 10
    verbose: false
    mode: max
    strict: true
    check_finite: true
    stopping_threshold: null
    divergence_threshold: null
    check_on_train_epoch_end: null
  model_summary:
    _target_: lightning.pytorch.callbacks.RichModelSummary
    max_depth: -1
  rich_progress_bar:
    _target_: lightning.pytorch.callbacks.RichProgressBar
logger:
  csv:
    _target_: lightning.pytorch.loggers.csv_logs.CSVLogger
    save_dir: ${paths.output_dir}
    name: csv/
    prefix: ''
  tensorboard:
    _target_: lightning.pytorch.loggers.tensorboard.TensorBoardLogger
    save_dir: ${paths.output_dir}/tensorboard/
    name: null
    log_graph: false
    default_hp_metric: true
    prefix: ''
  aim:
    __target__: aim.pytorch_lightning.AimLogger
    experiment: ${name}
    train_metric_prefix: train_
    test_metric_prefix: test_
    val_metric_prefix: val_
  mlflow:
    _target_: lightning.pytorch.loggers.MLFlowLogger
    experiment_name: ${name}
    tracking_uri: file:${paths.log_dir}/mlruns
    save_dir: ${paths.log_dir}/mlruns
    log_model: false
    prefix: ''
trainer:
  _target_: lightning.Trainer
  default_root_dir: ${paths.output_dir}
  min_epochs: 1
  max_epochs: 6
  accelerator: auto
  devices: auto
  deterministic: true
  log_every_n_steps: 10
  fast_dev_run: false
paths:
  root_dir: ${oc.env:PROJECT_ROOT}
  data_dir: ${paths.root_dir}/data/
  log_dir: ${paths.root_dir}/logs/
  ckpt_dir: ${paths.root_dir}/checkpoints
  artifact_dir: ${paths.root_dir}/artifacts/
  data_url: https://storage.googleapis.com/mledu-datasets/cats_and_dogs_filtered.zip
  output_dir: ${hydra:runtime.output_dir}
  work_dir: ${hydra:runtime.cwd}
